Array is a object in Java

Array declaration
int arr[]; or
int[] arr; or
int []arr;

Array Instantiation
int arr[] = new int[5];

Array Initialisation
int arr[3] = 30;
int arr[1] = 10;
int arr[0] = -10;

Sop(arr[2]);

int arr[] = {2, 4, 5, 6, 6,};


Adv - i. Random Access
      ii. Code Optimisation

Disadvantage - i. Array size is fixed


There are two types of arrays
i. one dimensional
ii. two dimensional

Time Complexity
    - Time Complexity is time taken by the algorithm to get executed and it varies according to the user input.
    - The time complexity is a measure of the amount of time an algorithm takes to complete as a function of the size of it's input.
    - It helps to estimate how the runtime of an algorithm will increase as the input size grows. The time complexity is expressed using Big O Notation.
    - The time complexity is divided into three cases
        i. Best case: The scenario where an algorithm performs the least number of steps or takes the least amount of time to complete.
        ii. Average case: The scenario that represents the algorithm's typical performance across all possible inputs. It gives the general idea of algorithms expected execution time.
        iii. Worst case: The scenario where algorithm takes the most time or perform the maximum number of iterations to complete.



Algorithm	    Best Case	Average Case	Worst Case
Linear Search	O(1)	    O(n)	        O(n)
Binary Search	O(1)	    O(log n)	    O(log n)
Bubble Sort	    O(n)	    O(n²)	        O(n²)
Selection Sort	O(n²)	    O(n²)	        O(n²)
Insertion Sort	O(n)	    O(n²)	        O(n²)
Merge Sort	    O(n log n)	O(n log n)	    O(n log n)
Quick Sort	    O(n log n)	O(n log n)	    O(n²)
Heap Sort	    O(n log n)	O(n log n)	    O(n log n)
Counting Sort	O(n + k)	O(n + k)	    O(n + k)
Radix Sort	    O(n + k)	O(n log n)	    O(n log n)
Bucket Sort	    O(n)	    O(n + k)	    O(n²)


Searching Techniques
1. Linear Search (Sequential Search)
    i. Worst case - O(n)
    ii. Average case - O(n)
    iii. Best case - O(1)

2. Binary Search


