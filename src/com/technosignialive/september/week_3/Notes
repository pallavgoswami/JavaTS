Constructors

1. Constructor is a special type of method which is used to create and initialise an object of a class.
2. Constructor name and class name must be same.
3. Constructor doesn't have any return type but by default/implicitly returns the object of a class.
4. There are 2 types of constructors in Java
    i. Default Constructor
    ii. Parameterized Constructor

Default Constructor

1. A constructor is called as a default constructor when it doesn't have parameters.
2. It is also called as a no argument constructor.
3. The constructor is invoked or called at the time of object creation of a class.
4. It is called a constructor because it constructs the values at the time of object creation.
IMP --> 5. ** It is not necessary to write a constructor for a class. It is because javac will provide or create a default constructor if we are not writing any type of constructor in our class **.

this() and super() constructor is used to call current class constructor and super(parent) class constructor respectively.
this() or super() must be the first statement of the constructor.
super() is the first statement of any constructor implicitly by default.
we cannot write this() and super() in the same constructor at a time.


ACCESS MODIFIERS

As the name suggests access modifiers in Java help to restrict the scope of a class, constructor, variable, method, or data member.
There are four types of access modifiers available in java:
1. Default - No keyword required
2. Private
3. Protected
4. Public

1. Default
    i. The data members, class or methods which are not declared using any access modifiers i.e having default access modifier
        are accessible only within the same package.
    ii. When no access modifier is specified for a class method, or data member - It is said to be having the default access modifier by default.
    iii.

2. Private
    i. Private members are accessible within a class
    ii. If a constructor is declared as private and accessed in other class, the error would be - Constructor is not visible which means
    constructor is present but just not visible

3. Protected
    i. Accessed outside a class and within a package but can also be accessed outside a class under one case which is inheritance