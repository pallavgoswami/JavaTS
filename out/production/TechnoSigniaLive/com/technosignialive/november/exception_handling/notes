Exception
Exception is an abnormal condition or unwanted event which occurs at runtime or while executing the program.

Exception Handling
Exception Handling is a powerful mechanism to handle runtime errors so that normal flow of the program can be maintained.

There are two types of exception in Java
i. compile-time exception (checked exceptions)
    The class which extends exception class and throwable class except run-time exception class is called a compile-time exception.

ii. run-time exception (unchecked exceptions)
    The class which extends run-time exception class is called run-time exceptions.

Try with multi-catch block
    We can write try with multiple catch blocks, but it should be ordered in most specific to most generic

    IMPORTANT -> At a time only one exception occurs and at a time only one catch block can get executed.

Exception Handling is mainly used to handle checked exceptions which are not in developers control.
And unchecked exceptions are in developers control. He/She can his/her code.

FINALLY BLOCK
    We use to write important code of the program. It is executed weather an exception is handled or not.
    Java finally block follows try or catch block.
    IMP -> If you don't handle the exception before terminating the program, JVM will execute finally block if there exists any.



THROW AND THROWS
    If we want to throw and exception explicitly then we use throw keyword.

    throws -> throws keyword is used to declare an exception and it is used with method signature.

EXCEPTION PROPAGATION
    Unchecked exceptions get propagated in method calling chain implicitly or by default but
    Checked exceptions do not propagate in method calling chain. We need to use throws keyword to make them propagate in
    method calling chain.


